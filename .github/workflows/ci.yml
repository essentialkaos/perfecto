name: CI

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master]
  schedule:
    - cron: '0 10 */15 * *'

jobs:
  Go:
    name: Go
    runs-on: ubuntu-latest

    env:
      SRC_DIR: src/github.com/${{ github.repository }}
      GO111MODULE: auto

    strategy:
      matrix:
        go: [ '1.16.x', '1.17.x' ]

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
        id: go

      - name: Setup PATH
        run: |
          echo "GOPATH=${{ github.workspace }}" >> "$GITHUB_ENV"
          echo "GOBIN=${{ github.workspace }}/bin" >> "$GITHUB_ENV"
          echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{env.SRC_DIR}}

      - name: Disable initramfs update
        run: sudo sed -i 's/yes/no/g' /etc/initramfs-tools/update-initramfs.conf

      - name: Disable man-db update
        run: sudo rm -f /var/lib/man-db/auto-update

      - name: Install RPMLint
        run: sudo apt-get install -y rpmlint

      - name: Print RPMLint version
        run: rpmlint --version

      - name: Download dependencies
        working-directory: ${{env.SRC_DIR}}
        run: make deps deps-test

      - name: Build binary
        working-directory: ${{env.SRC_DIR}}
        run: make all

      - name: Run tests
        working-directory: ${{env.SRC_DIR}}
        run: .scripts/script.sh

      - name: Install goveralls
        env:
          GO111MODULE: off
        run: go get -v github.com/mattn/goveralls

      - name: Send coverage to Coveralls
        working-directory: ${{env.SRC_DIR}}
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -service github -coverprofile cover.out

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: Install codeclimate-test-reporter
        run: npm install -g codeclimate-test-reporter

      - name: Send coverage to Codebeat
        working-directory: ${{env.SRC_DIR}}
        env:
          CODECLIMATE_API_HOST: https://codebeat.co/webhooks/code_coverage
          CODECLIMATE_REPO_TOKEN: ${{ secrets.CODECLIMATE_TOKEN }}
        run: codeclimate-test-reporter < cover.out

  Shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check scripts with Shellcheck
        uses: essentialkaos/shellcheck-action@v1
        with:
          files: perfecto-docker

  Hadolint:
    name: Hadolint
    runs-on: ubuntu-latest

    needs: Go

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check dockerfiles with Hadolint
        uses: essentialkaos/hadolint-action@v1
        with:
          files: centos7.docker micro.docker

  DockerBuild:
    name: Docker Build Check
    runs-on: ubuntu-latest

    needs: Hadolint

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build CentOS 7 based image
        run: |
          docker build -f centos7.docker -t perfecto:centos7 .

      - name: Build Alpine based image
        run: |
          docker build -f micro.docker -t perfecto:micro .
