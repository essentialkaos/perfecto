name: CI

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master]
  schedule:
    - cron: '0 10 */15 * *'

permissions:
  actions: read
  contents: read
  statuses: write

jobs:
  Go:
    name: Go
    runs-on: ubuntu-latest

    env:
      SRC_DIR: src/github.com/${{ github.repository }}

    strategy:
      matrix:
        go: [ '1.17.x', '1.18.x' ]

    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
        id: go

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ${{env.SRC_DIR}}

      - name: Disable initramfs update
        run: sudo sed -i 's/yes/no/g' /etc/initramfs-tools/update-initramfs.conf

      - name: Disable man-db update
        run: sudo rm -f /var/lib/man-db/auto-update

      - name: Install RPMLint
        run: sudo apt-get install -y rpmlint

      - name: Print RPMLint version
        run: rpmlint --version

      - name: Download dependencies
        working-directory: ${{env.SRC_DIR}}
        run: make deps

      - name: Build binary
        working-directory: ${{env.SRC_DIR}}
        run: make all

      - name: Run tests
        working-directory: ${{env.SRC_DIR}}
        run: .scripts/script.sh

      - name: Send coverage data
        uses: essentialkaos/goveralls-action@v1
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ${{env.SRC_DIR}}
          profile: cover.out

  Shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest

    needs: Go

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check scripts with Shellcheck
        uses: essentialkaos/shellcheck-action@v1
        with:
          files: perfecto-docker

  Hadolint:
    name: Hadolint
    runs-on: ubuntu-latest

    needs: Go

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check dockerfiles with Hadolint
        uses: essentialkaos/hadolint-action@v1
        with:
          files: centos7.docker micro.docker

  DockerBuild:
    name: Docker Build Check
    runs-on: ubuntu-latest

    needs: Hadolint

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build CentOS 7 based image
        run: |
          docker build -f centos7.docker -t perfecto:centos7 .

      - name: Build Alpine based image
        run: |
          docker build -f micro.docker -t perfecto:micro .

      - name: Show info about built Docker image
        uses: essentialkaos/docker-info-action@v1
        with:
          image: perfecto:centos7 perfecto:micro
          show-labels: true
