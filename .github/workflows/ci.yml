name: CI

on:
  workflow_call:
    secrets:
      CODACY_PROJECT_TOKEN:
        required: true

permissions:
  actions: read
  contents: read
  statuses: write

jobs:
  Go:
    name: Go
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go: [ '1.23.x', '1.24.x' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Disable initramfs update
        run: sudo sed -i 's/yes/no/g' /etc/initramfs-tools/update-initramfs.conf

      - name: Disable man-db update
        run: sudo rm -f /var/lib/man-db/auto-update

      - name: Install RPMLint
        run: sudo apt-get install -y rpmlint

      - name: Configure RPMLint
        run: sudo sed -i "s/^Filters = \[\]/Filters = ['superfluous-%clean-section']/" /usr/lib/python3/dist-packages/rpmlint/configdefaults.toml

      - name: Print RPMLint version
        run: rpmlint --version

      - name: Download dependencies
        run: make deps

      - name: Build binary
        run: make all

      - name: Run tests
        run: make test COVERAGE_FILE=cover.out

      - name: Send coverage data to Coveralls
        uses: essentialkaos/goveralls-action@v2
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          profile: cover.out
          parallel: true
          flag-name: linux-${{ matrix.go }}

      - name: Send coverage data to Codacy
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report \
          --force-coverage-parser go \
          -r cover.out \
          --partial

  SendCoverage:
    name: Send Coverage
    runs-on: ubuntu-latest
    if: success() || failure()

    needs: Go

    steps:
      - name: Finish parallel tests (Coveralls)
        uses: essentialkaos/goveralls-action@v2
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          parallel-finished: true

      - name: Finish parallel tests (Codacy)
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) final

  Perfecto:
    name: Perfecto
    runs-on: ubuntu-latest

    needs: Go

    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check specs with Perfecto
        uses: essentialkaos/perfecto-action@v2
        with:
          files: common/perfecto.spec

  Shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest

    needs: Go

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check scripts with Shellcheck
        uses: essentialkaos/shellcheck-action@v1
        with:
          files: perfecto-container

  Hadolint:
    name: Hadolint
    runs-on: ubuntu-latest

    needs: Go

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check dockerfiles with Hadolint
        uses: essentialkaos/hadolint-action@v1
        with:
          files: .docker/*.docker

  Typos:
    name: Typos
    runs-on: ubuntu-latest

    needs: Go

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check spelling
        continue-on-error: true
        uses: crate-ci/typos@master
