#! /usr/bin/env bash

################################################################################

# Default image (String)
DEFAULT_IMAGE="essentialkaos/perfecto:centos7"

################################################################################

# Main func
#
# Code: No
# Echo: No
main() {
  if ! hasApp "docker" ; then
    echo "You must install docker first"
    exit 1
  fi

  if [[ $# -eq 0 ]] ; then
    usage
    exit 0
  fi

  check "$@"

  exit $?
}

# Run perfecto check
#
# *: Specs
#
# Code: No
# Echo: No
check() {
  local image tmp_dir args opts status

  image="${IMAGE:-$DEFAULT_IMAGE}"
  tmp_dir=$(mktemp -d -t 'pfdkr-XXXXXXXXXXXXX')

  args=$(processArgs "$tmp_dir" "$@")

  if [[ -z "$CI" ]] ; then
    opts="-it"
  fi
  
  # shellcheck disable=SC2086
  docker run --rm $opts -v "$tmp_dir":/perfecto "$image" ${args}

  status=$?

  rm -rf "$tmp_dir"

  return $status
}

# Show usage info
#
# Code: No
# Echo: No
usage() {
  local image="${IMAGE:-$DEFAULT_IMAGE}"
  local opts

  if [[ -z "$CI" ]] ; then
    opts="-it"
  fi

  docker run --rm $opts "$image" "--help"

  return $?
}

# Process arguments
#
# 1: Path to temporary directory (String)
# *: Specs
#
# Code: No
# Echo: No
processArgs() {
  local tmp_dir="$1"
  local arg spec_name result

  shift 1

  for arg in "$@" ; do
    if [[ ! -r "$arg" ]] ; then
      result="$result $arg"
      continue
    fi

    cp "$arg" "$tmp_dir/" &>/dev/null

    spec_name=$(basename "$arg")
    result="$result $spec_name"
  done

  echo "$result"
}

# Check if some app is installed
#
# 1: Binray name (String)
#
# Code: Yes
# Echo: No
hasApp() {
  type "$1" &> /dev/null
  return $?
}

################################################################################

main "$@"
